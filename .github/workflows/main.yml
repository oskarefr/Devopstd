name: CI devops 2022
on:
  #to begin you want to launch this job in main and develop
  push:
    branches: main #TODO 
  pull_request:

jobs:
  test-backend: 
    runs-on: ubuntu-22.04
    steps:
     #checkout your github code using actions/checkout@v2.5.0
      - uses: actions/checkout@v2.5.0

     #do the same with another action (actions/setup-java@v3) that enable to setup jdk 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '17'

     #finally build your app with the latest command
      - name: Build and test with Maven
        run: mvn -f /home/runner/work/Devopstd/Devopstd/simple-api-student-main/ clean verify   #TODO

        
      - name: Solar test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn  -f /home/runner/work/Devopstd/Devopstd/simple-api-student-main/ verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=oskarefr_Devopstd

    # define job to build and publish docker image
  build-and-push-docker-image:
    needs: test-backend
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-22.04

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.5.0


      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
            
      - name: Build image and push backend
        uses: docker/build-push-action@v3
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./simple-api-student-main
          # Note: tags has to be all lower-case
          tags:  ${{secrets.DOCKERHUB_USERNAME}}/simple-api

          push: ${{ github.ref == 'refs/heads/main' }}


      - name: Build image and push database
          # DO the same for database
        uses: docker/build-push-action@v3
        with:
          # relative path to the place where source code with Dockerfile is locatd
          context: ./database
          # Note: tags has to be all lower-caseas
          tags:  ${{secrets.DOCKERHUB_USERNAME}}/mydatabase
          

          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Build image and push httpd
        # DO the same for httpd
        uses: docker/build-push-action@v3
        with:
          # relative path to the place where source code with Dockerfile located
          context: ./http-server
          # Note: tags has to be all lower-case
          tags:  ${{secrets.DOCKERHUB_USERNAME}}/http-server

          push: ${{ github.ref == 'refs/heads/main' }}

